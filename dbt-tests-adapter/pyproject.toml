[project]
dynamic = ["version"]
name = "dbt-tests-adapter"
description = "The set of reusable tests and test fixtures used to test common functionality"
readme = "README.md"
keywords = ["dbt", "adapter", "adapters", "database", "elt", "dbt-core", "dbt Core", "dbt Cloud", "dbt Labs"]
requires-python = ">=3.8.0"
authors = [
    { name = "dbt Labs", email = "info@dbtlabs.com" },
]
maintainers = [
    { name = "dbt Labs", email = "info@dbtlabs.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # TODO: remove `dbt-core` dependency
    "dbt-core>=1.8.0a1,<1.9.0",
    # `dbt-tests-adapter` will ultimately depend on the packages below
    # `dbt-tests-adapter` temporarily uses `dbt-core` for a dbt runner
    # `dbt-core` takes the packages below as dependencies, so they are unpinned to avoid conflicts
    "dbt-adapters",
    "pyyaml",
]

[project.optional-dependencies]
build = [
    "wheel",
    "twine",
    "check-wheel-contents",
]

[project.urls]
Homepage = "https://github.com/dbt-labs/dbt-adapters"
Documentation = "https://docs.getdbt.com"
Repository = "https://github.com/dbt-labs/dbt-adapters.git"
Issues = "https://github.com/dbt-labs/dbt-adapters/issues"
Changelog = "https://github.com/dbt-labs/dbt-adapters/blob/main/CHANGELOG.md"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "dbt/tests/__about__.py"

[tool.hatch.build.targets.sdist]
include = ["dbt/tests", "dbt/__init__.py"]

[tool.hatch.build.targets.wheel]
include = ["dbt/tests", "dbt/__init__.py"]

[tool.hatch.envs.build]
detached = true
features = ["build"]
[tool.hatch.envs.build.scripts]
check-all = [
    "- check-wheel",
    "- check-sdist",
]
check-wheel = [
    "twine check dist/*",
    "find ./dist/dbt_tests_adapter-*.whl -maxdepth 1 -type f | xargs python -m pip install --force-reinstall --find-links=dist/",
    "pip freeze | grep dbt-tests-adapter",
]
check-sdist = [
    "check-wheel-contents dist/*.whl --ignore W007,W008",
    "find ./dist/dbt_tests_adapter-*.gz -maxdepth 1 -type f | xargs python -m pip install --force-reinstall --find-links=dist/",
    "pip freeze | grep dbt-tests-adapter",
]
