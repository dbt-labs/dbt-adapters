[project]
dynamic = ["version"]
name = "dbt-adapters"
description = "The set of adapter protocols and base functionality that supports integration with dbt-core"
readme = "README.md"
keywords = ["dbt", "adapter", "adapters", "database", "elt", "dbt-core", "dbt Core", "dbt Cloud", "dbt Labs"]
requires-python = ">=3.8.0"
authors = [
    { name = "dbt Labs", email = "info@dbtlabs.com" },
]
maintainers = [
    { name = "dbt Labs", email = "info@dbtlabs.com" },
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "dbt-common<2.0",
    "pytz>=2015.7",
    # installed via dbt-common but used directly
    "agate>=1.0,<2.0",
    "mashumaro[msgpack]>=3.0,<4.0",
    "protobuf>=3.0,<5.0",
    "typing-extensions>=4.0,<5.0",
]
[project.urls]
Homepage = "https://github.com/dbt-labs/dbt-adapters"
Documentation = "https://docs.getdbt.com"
Repository = "https://github.com/dbt-labs/dbt-adapters.git"
Issues = "https://github.com/dbt-labs/dbt-adapters/issues"
Changelog = "https://github.com/dbt-labs/dbt-adapters/blob/main/CHANGELOG.md"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "dbt/adapters/__about__.py"

[tool.hatch.build.targets.sdist]
include = ["dbt/adapters", "dbt/include", "dbt/__init__.py"]

[tool.hatch.build.targets.wheel]
include = ["dbt/adapters", "dbt/include", "dbt/__init__.py"]

[tool.hatch.envs.default]
dependencies = [
    "dbt_common @ git+https://github.com/dbt-labs/dbt-common.git",
    'pre-commit==3.7.0;python_version>="3.9"',
    'pre-commit==3.5.0;python_version=="3.8"',
]
[tool.hatch.envs.default.scripts]
dev = "pre-commit install"
code-quality = "pre-commit run --all-files"

[tool.hatch.envs.unit-tests]
dependencies = [
    "dbt_common @ git+https://github.com/dbt-labs/dbt-common.git",
    "pytest",
    "pytest-dotenv",
    "pytest-xdist",
]
[tool.hatch.envs.unit-tests.scripts]
all = "python -m pytest {args:tests/unit}"

[tool.hatch.envs.build]
detached = true
dependencies = [
    "wheel",
    "twine",
    "check-wheel-contents",
]
[tool.hatch.envs.build.scripts]
check-all = [
    "- check-wheel",
    "- check-sdist",
]
check-wheel = [
    "twine check dist/*",
    "find ./dist/dbt_adapters-*.whl -maxdepth 1 -type f | xargs python -m pip install --force-reinstall --find-links=dist/",
    "pip freeze | grep dbt-adapters",
]
check-sdist = [
    "check-wheel-contents dist/*.whl --ignore W007,W008",
    "find ./dist/dbt_adapters-*.gz -maxdepth 1 -type f | xargs python -m pip install --force-reinstall --find-links=dist/",
    "pip freeze | grep dbt-adapters",
]
protobuf = "protoc -I=./dbt/adapters/events --python_out=./dbt/adapters/events ./dbt/adapters/events/adapter_types.proto"

[tool.mypy]
mypy_path = "third-party-stubs/"
[[tool.mypy.overrides]]
module = ["dbt.adapters.events.adapter_types_pb2"]
follow_imports = "skip"

[tool.pytest]
env_files = ["test.env"]
testpaths = [
    "tests/functional",
    "tests/unit",
]
color = true
csv = "results.csv"
