name: "# Changelog generation"
run-name: "Changelog generation - ${{ github.actor }} - package:${{ inputs.package }} merge:${{ inputs.merge }} branch:${{ inputs.branch }}"

on:
    workflow_call:
        inputs:
            package:
                description: "Choose the package getting published"
                type: string
                default: "dbt-adapters"
            branch:
                description: "Choose the branch to use"
                type: string
                default: "main"
        outputs:
            branch-name:
                description: "The SHA to release"
                value: ${{ jobs.branch.outputs.name }}
        secrets:
            FISHTOWN_BOT_PAT:
                description: "Token to commit/merge changes into branches"
                required: true
            IT_TEAM_MEMBERSHIP:
                description: "Token that can view org level teams"
                required: true
    workflow_dispatch:
        inputs:
            package:
                description: "Choose the package getting published"
                type: choice
                options:
                -   "dbt-adapters"
                -   "dbt-tests-adapter"
                -   "dbt-athena"
                -   "dbt-bigquery"
                -   "dbt-postgres"
                -   "dbt-redshift"
                -   "dbt-snowflake"
                -   "dbt-spark"
            branch:
                description: "Choose the branch to use"
                type: string
                default: "main"

permissions:
    contents: write

jobs:
    version:
        runs-on: ${{ vars.DEFAULT_RUNNER }}
        outputs:
            raw: ${{ steps.version.outputs.raw }}
            base: ${{ steps.semver.outputs.base-version }}
            prerelease: ${{ steps.semver.outputs.pre-release }}
            is-prerelease: ${{ steps.semver.outputs.is-pre-release }}
        steps:
        -   uses: actions/checkout@v4
            with:
                ref: ${{ inputs.branch }}
        -   uses: actions/setup-python@v5
            with:
                python-version: ${{ vars.DEFAULT_PYTHON_VERSION }}
        -   uses: pypa/hatch@install
        -   id: version
            run: echo "raw=$(hatch version)" >> $GITHUB_OUTPUT
            working-directory: ./${{ inputs.package }}
        -   id: semver
            uses: dbt-labs/actions/parse-semver@v1.1.1
            with:
                version: ${{ steps.version.outputs.raw }}

    changelog:
        needs: version
        runs-on: ${{ vars.DEFAULT_RUNNER }}
        outputs:
            path: ${{ steps.changelog.outputs.path }}
            exists: ${{ steps.changelog.outputs.exists }}
        steps:
        -   uses: actions/checkout@v4
            with:
                ref: ${{ inputs.branch }}
        -   id: changelog
            run: |
                path=".changes/${{ needs.version.outputs.base }}"
                if [[ ${{ needs.version.outputs.is-prerelease }} -eq 1 ]]
                then
                    path+="-${{ needs.version.outputs.prerelease }}"
                fi
                path+=".md"

                echo "path=$path" >> $GITHUB_OUTPUT

                exists=false
                if test -f $path
                then
                    exists=true
                fi
                echo "exists=$exists">> $GITHUB_OUTPUT
            working-directory: ./${{ inputs.package }}

    dbt-membership:
        needs: changelog
        if: needs.changelog.outputs.exists == 'false'
        runs-on: ${{ vars.DEFAULT_RUNNER }}
        outputs:
           team: ${{ steps.team.outputs.team }}
        steps:
        -   id: temp-file
            run: echo "name=output_$GITHUB_RUN_ID.json" >> $GITHUB_OUTPUT
        -   run: |
                gh api -H "Accept: application/vnd.github+json" orgs/dbt-labs/teams/core-group/members > ${{ steps.temp-file.outputs.name }}
            env:
                GH_TOKEN: ${{ secrets.IT_TEAM_MEMBERSHIP }}
        -   id: team
            run: |
                team_list=$(jq -r '.[].login' ${{ steps.temp-file.outputs.name }})
                team_list_single=$(echo $team_list | tr '\n' ' ')
                echo "team=$team_list_single" >> $GITHUB_OUTPUT
        -   run: rm ${{ steps.temp-file.outputs.name }}

    generate-changelog:
        needs:
        -   version
        -   changelog
        -   dbt-membership
        if: needs.changelog.outputs.exists == 'false'
        runs-on: ${{ vars.DEFAULT_RUNNER }}
        steps:
        -   uses: actions/checkout@v4
            with:
                ref: ${{ inputs.branch }}
        -   run: echo "/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin" >> $GITHUB_PATH
        -   run: |
                brew tap miniscruff/changie https://github.com/miniscruff/changie
                brew install changie
        -   run: |
                if [[ ${{ needs.version.outputs.is-prerelease }} -eq 1 ]]
                then
                    changie batch ${{ needs.version.outputs.base }} --move-dir '${{ needs.version.outputs.base }}' --prerelease ${{ needs.version.outputs.prerelease }}
                elif [[ -d ".changes/${{ needs.version.outputs.base }}" ]]
                then
                    changie batch ${{ needs.version.outputs.base }} --include '${{ needs.version.outputs.base }}' --remove-prereleases
                else # releasing a final patch with no prereleases
                    changie batch ${{ needs.version.outputs.base }}
                fi
                changie merge
            working-directory: ./${{ inputs.package }}
            env:
                CHANGIE_CORE_TEAM: ${{ needs.dbt-membership.outputs.team }}
        -   uses: pre-commit/action@v3.0.1
            continue-on-error: true
        -   uses: ./.github/actions/bot-commit
            with:
                message: "Generate changelog for ${{ needs.version.outputs.raw }}"
