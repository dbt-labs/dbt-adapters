name: "# Unit tests"
run-name: "Unit tests - ${{ github.actor }} - package:${{ inputs.package }} branch:${{ inputs.branch }} repository:${{ inputs.repository }} os:${{ inputs.os }} python-version:${{ inputs.python-version }}"

on:
    workflow_call:
        inputs:
            package:
                description: "Choose the package to test"
                type: string
                default: "dbt-adapters"
            branch:
                description: "Choose the branch to test"
                type: string
                default: "main"
            repository:
                description: "Choose the repository to test, when using a fork"
                type: string
                default: "dbt-labs/dbt-adapters"
            os:
                description: "Choose the OS to test against"
                type: string
                default: "ubuntu-22.04"
            python-version:
                description: "Choose the Python version to test against"
                type: string
                default: 3.9
            hatch-env:
                description: "The hatch environment to run tests on"
                type: string
                default: "default"
    workflow_dispatch:
        inputs:
            package:
                description: "Choose the package to test"
                type: choice
                options:
                -   "dbt-adapters"
                -   "dbt-athena"
                -   "dbt-athena-community"
                -   "dbt-bigquery"
                -   "dbt-postgres"
                -   "dbt-redshift"
                -   "dbt-snowflake"
                -   "dbt-spark"
            branch:
                description: "Choose the branch to test"
                type: string
                default: "main"
            repository:
                description: "Choose the repository to test, when using a fork"
                type: string
                default: "dbt-labs/dbt-adapters"
            os:
                description: "Choose the OS to test against"
                type: string
                default: "ubuntu-22.04"
            python-version:
                description: "Choose the Python version to test against"
                type: choice
                options: ["3.9", "3.10", "3.11", "3.12"]
            hatch-env:
                description: "The hatch environment to run tests on"
                type: string
                default: "default"

permissions:
    contents: read

defaults:
    run:
        shell: bash

jobs:
    unit-tests:
        runs-on: ${{ inputs.os }}
        name: "unit-tests - ${{ inputs.package }} - ${{ inputs.branch }} - ${{ inputs.os }} - ${{ inputs.python-version }}"
        steps:
        -   uses: actions/checkout@v4
            with:
                ref: ${{ inputs.branch }}
                repository: ${{ inputs.repository }}
        -   uses: actions/setup-python@v5
            with:
                python-version: ${{ inputs.python-version }}
        -   run: |
                echo "HATCH_PYTHON=${{ inputs.python-version }}" >> $GITHUB_ENV
                echo "PIP_ONLY_BINARY=psycopg2-binary" >> $GITHUB_ENV
        # mac + 3.9 requires postgresql to be installed manually so that the psycopg2-binary wheel can be found
        -   name: "psycopg2-binary check"
            if: inputs.python-version == '3.9' && runner.os == 'macOS'
            run: brew install postgresql
        -   uses: pypa/hatch@install
        -   run: brew install unixodbc
            if: inputs.package == 'dbt-spark' && runner.os == 'macOS'
        -   run: hatch run ${{ inputs.hatch-env }}:unit-tests
            working-directory: ./${{ inputs.package }}
