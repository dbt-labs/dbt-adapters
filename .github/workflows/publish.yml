name: "Publish"
run-name: "Publish - ${{ inputs.package }} - ${{ inputs.deploy-to }} - ${{ github.actor }}"

on:
    workflow_dispatch:
        inputs:
            package:
                description: "Choose the package to publish"
                type: choice
                options:
                -   "dbt-adapters"
                -   "dbt-tests-adapter"
                -   "dbt-athena"
                -   "dbt-athena-community"
                -   "dbt-bigquery"
                -   "dbt-postgres"
                -   "dbt-redshift"
                -   "dbt-snowflake"
                -   "dbt-spark"
            deploy-to:
                description: "Choose whether to publish to test or prod"
                type: choice
                options: ["prod", "test"]
            branch:
                description: "Choose the branch to publish from"
                type: string
                default: "main"
            pypi-internal:
                description: "Publish Internally"
                type: boolean
                default: true
            pypi-public:
                description: "Publish to PyPI"
                type: boolean
                default: false
            skip-unit-tests:
                description: "Skip running unit tests"
                type: boolean
                default: false
            skip-integration-tests:
                description: "Skip running integration tests"
                type: boolean
                default: false

# don't publish to the same target in parallel
concurrency:
    group: ${{ github.workflow }}-${{ inputs.package }}-${{ inputs.deploy-to }}
    cancel-in-progress: true

defaults:
    run:
        shell: bash

jobs:
    unit-tests:
        if: |
            inputs.skip-unit-tests == false &&
            !contains(fromJSON('["dbt-tests-adapter"]'), inputs.package)
        uses: ./.github/workflows/_unit-tests.yml
        with:
            package: ${{ inputs.package }}
            branch: ${{ inputs.branch }}

    integration-tests:
        if: |
            inputs.skip-integration-tests == false &&
            !contains(fromJSON('["dbt-adapters", "dbt-tests-adapter"]'), inputs.package)
        uses: ./.github/workflows/_integration-tests.yml
        with:
            package: ${{ inputs.package }}
            branch: ${{ inputs.branch }}
        secrets: inherit

    publish-prep-checks:
        name: "Publish prep checks"
        if: always()
        needs: [unit-tests, integration-tests]
        runs-on: ${{ vars.DEFAULT_RUNNER }}
        steps:
        -   uses: re-actors/alls-green@release/v1
            with:
                jobs: ${{ toJSON(needs) }}
                allowed-skips: ${{ toJSON(needs) }}

    publish-internal:
        if: |
            always() &&
            inputs.pypi-internal == true &&
            needs.publish-prep-checks.result == 'success' &&
            !contains(fromJSON('["dbt-adapters", "dbt-tests-adapter", "dbt-athena-community"]'), inputs.package)
        needs: publish-prep-checks
        uses: ./.github/workflows/_publish-internal.yml
        with:
            package: ${{ inputs.package }}
            deploy-to: ${{ inputs.deploy-to }}
            branch: ${{ inputs.branch }}
        secrets: inherit

    generate-changelog:
        needs: publish-prep-checks
        if: |
            always() &&
            inputs.pypi-public == true &&
            needs.publish-prep-checks.result == 'success'
        uses: ./.github/workflows/_generate-changelog.yml
        with:
            package: ${{ inputs.package }}
            merge: ${{ inputs.deploy-to == 'prod' }}
            branch: ${{ inputs.branch }}
        secrets: inherit

    publish-pypi:
        if: |
            always() &&
            inputs.pypi-public == true &&
            needs.publish-prep-checks.result == 'success' &&
            needs.generate-changelog.result == 'success'
        needs: [publish-prep-checks, generate-changelog]
        runs-on: ${{ vars.DEFAULT_RUNNER }}
        environment:
            name: ${{ inputs.deploy-to }}
            url: ${{ vars.PYPI_PROJECT_URL }}/${{ inputs.package }}
        permissions:
            # this permission is required for trusted publishing
            # see https://github.com/marketplace/actions/pypi-publish
            id-token: write
        steps:
        -   uses: actions/checkout@v4
            with:
                ref: ${{ needs.generate-changelog.outputs.branch-name }}
        -   uses: actions/setup-python@v5
            with:
                python-version: ${{ vars.DEFAULT_PYTHON_VERSION }}
        -   uses: pypa/hatch@install
            # hatch will build using test PyPI first and fall back to prod PyPI when deploying to test
            # this is done via environment variables in the test environment in GitHub
        -   run: hatch build && hatch run build:check-all
            working-directory: ./${{ inputs.package }}
        -   uses: pypa/gh-action-pypi-publish@release/v1
            with:
                repository-url: ${{ vars.PYPI_REPOSITORY_URL }}
                packages-dir: ./${{ inputs.package }}/dist/
        -   id: version
            run: echo "version=$(hatch version)" >> $GITHUB_OUTPUT
            working-directory: ./${{ inputs.package }}
        -   uses: nick-fields/retry@v3
            with:
                timeout_seconds: 10
                retry_wait_seconds: 10
                max_attempts: 15  # 5 minutes: (10s timeout + 10s delay) * 15 attempts
                command: wget ${{ vars.PYPI_PROJECT_URL }}/${{ steps.version.outputs.version }}
