name: Release
run-name: Release ${{ inputs.package }}==${{ inputs.version_number }} to ${{ inputs.deploy-to }}

on:
  workflow_dispatch:
    inputs:
      package:
        type: choice
        description: Choose what to publish
        options:
          - dbt-adapters
          - dbt-tests-adapter
      version_number:
        description: "The release version number (i.e. 1.0.0b1)"
        type: string
        required: true
      deploy-to:
        type: choice
        description: Choose where to publish
        options:
        - prod
        - test
        default: prod
      nightly_release:
        description: "Nightly release to dev environment"
        type: boolean
        default: false
        required: false
      target_branch:
        description: "The branch to release from"
        type: string
        required: false
        default: main

  workflow_call:
    inputs:
      package:
        type: string
        description: Choose what to publish
        required: true
      version_number:
        description: "The release version number (i.e. 1.0.0b1)"
        type: string
        required: true
      deploy-to:
        type: string
        default: prod
        required: false
      nightly_release:
        description: "Nightly release to dev environment"
        type: boolean
        default: false
        required: false
      target_branch:
        description: "The branch to release from"
        type: string
        required: false
        default: main

# this is the permission that allows creating a new release
permissions:
  contents: write
  id-token: write

# will cancel previous workflows triggered by the same event and for the same ref for PRs or same SHA otherwise
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ contains(github.event_name, 'pull_request') && github.event.pull_request.head.ref || github.sha }}-${{ inputs.package }}-${{ inputs.deploy-to }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  release-inputs:
    name: "Release inputs"
    runs-on: ubuntu-latest
    outputs:
      working-dir: ${{ steps.release-inputs.outputs.working-dir }}
      run-unit-tests: ${{ steps.release-inputs.outputs.run-unit-tests }}
      archive-name: ${{ steps.release-inputs.outputs.archive-name }}
    steps:
      - name: "Inputs"
        id: release-inputs
        run: |
          working_dir="./"
          run_unit_tests=true
          archive_name=${{ inputs.package }}-${{ inputs.version_number }}-${{ inputs.deploy-to }}

          if test "${{ inputs.package }}" = "dbt-tests-adapter"
          then
            working_dir="./dbt-tests-adapter/"
            run_unit_tests=false
          fi

          echo "working-dir=$working_dir" >> $GITHUB_OUTPUT
          echo "run-unit-tests=$run_unit_tests" >> $GITHUB_OUTPUT
          echo "archive-name=$archive_name" >> $GITHUB_OUTPUT

      - name: "[DEBUG]"
        run: |
          echo package        : ${{ inputs.package }}
          echo working-dir    : ${{ steps.release-inputs.outputs.working-dir }}
          echo run-unit-tests : ${{ steps.release-inputs.outputs.run-unit-tests }}
          echo archive-name   : ${{ steps.release-inputs.outputs.archive-name }}

  bump-version-generate-changelog:
    name: "Bump package version, Generate changelog"
    uses: dbt-labs/dbt-adapters/.github/workflows/release_prep_hatch.yml@main
    needs: [release-inputs]
    with:
      version_number: ${{ inputs.version_number }}
      deploy_to: ${{ inputs.deploy-to }}
      nightly_release: ${{ inputs.nightly_release }}
      target_branch: ${{ inputs.target_branch }}
      working-dir: ${{ needs.release-inputs.outputs.working-dir }}
      run-unit-tests: ${{ fromJSON(needs.release-inputs.outputs.run-unit-tests) }}
    secrets: inherit

  log-outputs-bump-version-generate-changelog:
    name: "[Log output] Bump package version, Generate changelog"
    if: ${{ !failure() && !cancelled() }}
    needs: [release-inputs, bump-version-generate-changelog]
    runs-on: ubuntu-latest
    steps:
      - name: Print variables
        run: |
          echo Final SHA     : ${{ needs.bump-version-generate-changelog.outputs.final_sha }}
          echo Changelog path: ${{ needs.bump-version-generate-changelog.outputs.changelog_path }}

  build-and-test:
    name: "Build and Test"
    needs: [release-inputs, bump-version-generate-changelog]
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.bump-version-generate-changelog.outputs.final_sha }}

      - name: "Setup `hatch`"
        uses: dbt-labs/dbt-adapters/.github/actions/setup-hatch@main

      - name: "Build ${{ inputs.package }}"
        uses: dbt-labs/dbt-adapters/.github/actions/build-hatch@main
        with:
          working-dir: ${{ needs.release-inputs.outputs.working-dir }}
          archive-name: ${{ needs.release-inputs.outputs.archive-name }}

  github-release:
    name: "GitHub Release"
    # ToDo: update GH release to handle adding dbt-tests-adapter and dbt-adapters assets to the same release
    if: ${{ !failure() && !cancelled() && inputs.package == 'dbt-adapters' }}
    needs: [release-inputs, build-and-test, bump-version-generate-changelog]
    uses: dbt-labs/dbt-adapters/.github/workflows/github-release.yml@main
    with:
      sha: ${{ needs.bump-version-generate-changelog.outputs.final_sha }}
      version_number: ${{ inputs.version_number }}
      changelog_path: ${{ needs.bump-version-generate-changelog.outputs.changelog_path }}
      test_run: ${{ inputs.deploy-to == 'test' && true || false }}
      archive_name: ${{ needs.release-inputs.outputs.archive-name }}

  pypi-release:
    name: "Publish to PyPI"
    runs-on: ubuntu-latest
    needs: [release-inputs, build-and-test]
    environment:
      name: ${{ inputs.deploy-to }}
      url: ${{ vars.PYPI_PROJECT_URL }}
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v4

      - name: "Publish to PyPI"
        uses: dbt-labs/dbt-adapters/.github/actions/publish-pypi@main
        with:
          repository-url: ${{ vars.PYPI_REPOSITORY_URL }}
          archive-name: ${{ needs.release-inputs.outputs.archive-name }}
