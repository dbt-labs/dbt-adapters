"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _NullValue:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _NullValueEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NullValue.ValueType],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NULL_VALUE: _NullValue.ValueType  # 0

class NullValue(_NullValue, metaclass=_NullValueEnumTypeWrapper): ...

NULL_VALUE: NullValue.ValueType  # 0
global___NullValue = NullValue

@typing.final
class OperationList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERATIONS_FIELD_NUMBER: builtins.int
    @property
    def operations(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___Operation
    ]: ...
    def __init__(
        self,
        *,
        operations: collections.abc.Iterable[global___Operation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["operations", b"operations"]) -> None: ...

global___OperationList = OperationList

@typing.final
class Operation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class InputKwargsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Object: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Object | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(
            self, field_name: typing.Literal["key", b"key", "value", b"value"]
        ) -> None: ...

    FUNCTION_NAME_FIELD_NUMBER: builtins.int
    INPUT_ARGS_FIELD_NUMBER: builtins.int
    INPUT_KWARGS_FIELD_NUMBER: builtins.int
    OUTPUTS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    function_name: builtins.str
    error: builtins.str
    @property
    def input_args(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Object]: ...
    @property
    def input_kwargs(
        self,
    ) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Object]: ...
    @property
    def outputs(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Object]: ...
    def __init__(
        self,
        *,
        function_name: builtins.str = ...,
        input_args: collections.abc.Iterable[global___Object] | None = ...,
        input_kwargs: collections.abc.Mapping[builtins.str, global___Object] | None = ...,
        outputs: collections.abc.Iterable[global___Object] | None = ...,
        error: builtins.str | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing.Literal["_error", b"_error", "error", b"error"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_error",
            b"_error",
            "error",
            b"error",
            "function_name",
            b"function_name",
            "input_args",
            b"input_args",
            "input_kwargs",
            b"input_kwargs",
            "outputs",
            b"outputs",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing.Literal["_error", b"_error"]
    ) -> typing.Literal["error"] | None: ...

global___Operation = Operation

@typing.final
class Object(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADAPTER_RESPONSE_FIELD_NUMBER: builtins.int
    AGATE_TABLE_FIELD_NUMBER: builtins.int
    POSTGRES_RELATION_FIELD_NUMBER: builtins.int
    NULL_VALUE_FIELD_NUMBER: builtins.int
    STRING_VALUE_FIELD_NUMBER: builtins.int
    BOOLEAN_VALUE_FIELD_NUMBER: builtins.int
    null_value: global___NullValue.ValueType
    string_value: builtins.str
    boolean_value: builtins.bool
    @property
    def adapter_response(self) -> global___AdapterResponse: ...
    @property
    def agate_table(self) -> global___AgateTable: ...
    @property
    def postgres_relation(self) -> global___PostgresRelation: ...
    def __init__(
        self,
        *,
        adapter_response: global___AdapterResponse | None = ...,
        agate_table: global___AgateTable | None = ...,
        postgres_relation: global___PostgresRelation | None = ...,
        null_value: global___NullValue.ValueType = ...,
        string_value: builtins.str = ...,
        boolean_value: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "adapter_response",
            b"adapter_response",
            "agate_table",
            b"agate_table",
            "boolean_value",
            b"boolean_value",
            "null_value",
            b"null_value",
            "postgres_relation",
            b"postgres_relation",
            "string_value",
            b"string_value",
            "value",
            b"value",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "adapter_response",
            b"adapter_response",
            "agate_table",
            b"agate_table",
            "boolean_value",
            b"boolean_value",
            "null_value",
            b"null_value",
            "postgres_relation",
            b"postgres_relation",
            "string_value",
            b"string_value",
            "value",
            b"value",
        ],
    ) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["value", b"value"]) -> (
        typing.Literal[
            "adapter_response",
            "agate_table",
            "postgres_relation",
            "null_value",
            "string_value",
            "boolean_value",
        ]
        | None
    ): ...

global___Object = Object

@typing.final
class AdapterResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESSAGE_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    ROWS_AFFECTED_FIELD_NUMBER: builtins.int
    QUERY_ID_FIELD_NUMBER: builtins.int
    message: builtins.str
    code: builtins.str
    rows_affected: builtins.int
    query_id: builtins.str
    def __init__(
        self,
        *,
        message: builtins.str = ...,
        code: builtins.str = ...,
        rows_affected: builtins.int = ...,
        query_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing.Literal["_query_id", b"_query_id", "query_id", b"query_id"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_query_id",
            b"_query_id",
            "code",
            b"code",
            "message",
            b"message",
            "query_id",
            b"query_id",
            "rows_affected",
            b"rows_affected",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing.Literal["_query_id", b"_query_id"]
    ) -> typing.Literal["query_id"] | None: ...

global___AdapterResponse = AdapterResponse

@typing.final
class AgateTable(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TABLE_ID_FIELD_NUMBER: builtins.int
    table_id: builtins.str
    """UUID of the saved JSON file"""
    def __init__(
        self,
        *,
        table_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["table_id", b"table_id"]) -> None: ...

global___AgateTable = AgateTable

@typing.final
class PostgresRelation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class DataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(
            self, field_name: typing.Literal["key", b"key", "value", b"value"]
        ) -> None: ...

    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Placeholder for PostgresRelation fields"""

    def __init__(
        self,
        *,
        data: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["data", b"data"]) -> None: ...

global___PostgresRelation = PostgresRelation
